LabExam 2022-12-17 G2: Reverse Engineering - Hardcoded Password
-------------------------------------------------------------------------------

Given the executable named "password_check".

$ ./password_check 
password> student
Login rejected, invalid password!

A) Extract Password  
Use static reverse engineering techniques to extract the hardcoded password.
Try to login with the found password - only when you see the following message, 
you have extracted the right password:
    "Welcome, you have entered a valid password!"   

    TODO: "hjHGzu&56nm;"


B) Storage Algorithm 
Describe the algorithm which has been used to build the password:

    TODO: 
    i) password length must be 6*2 characters 
    ii) iteral="VvnoWnioi8hjHGzu&56nm;:mkhjghfg"
    iii) substring: 
        starting with: literal+10
        length:6*2
        => hjHGzu&56nm;
    iv) compare this substring with the entered password
        
C) Dynamic Analysis 
Using ltrace, we can see the comparison between the entered password 
and the hardcoded one.
Note that this only works if we find out the right length of the 
password first (static analysis).

$ ltrace ./password_check 
printf("password> ")                                                  = 10
__isoc99_scanf(0x402033, 0x7ffc22428a20, 0, 0password> xxxxxxxxxxxx
)                        = 1
strlen("xxxxxxxxxxxx")                                                = 12
strncmp("hjHGzu&56nm;:mkhjghfg", "xxxxxxxxxxxx", 12)                  = -16
puts("Login rejected, invalid password"...Login rejected, invalid password!
)                           = 34
+++ exited (status 0) +++